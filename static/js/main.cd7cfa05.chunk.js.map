{"version":3,"sources":["enums/SortType.ts","components/Selector/Selector.tsx","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","Selector","memo","options","selectedLength","onChange","className","value","target","map","item","GoodsList","goods","compareRange","minLength","maxLength","useState","setLength","Default","sortBy","setSortType","isReversed","setReversed","handleReverseClick","useCallback","handleSortByLengthClick","ByLength","handleSortAlphabeticallyClick","Alphabetical","handleResetClick","handleSelectorChange","Number","visibleGoods","useMemo","visibleGoodsList","filter","length","sort","itemA","itemB","localeCompare","Error","reverse","availableOptions","getRange","ifNothingToReset","Button","onClick","disabled","goodsFromServer","App","isButtonVisible","setButtonVisible","handleStartClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd7cfa05.chunk.js","sourcesContent":["export enum SortType {\n  Default,\n  ByLength,\n  Alphabetical,\n}\n","import { FC, memo } from 'react';\n\ninterface Props {\n  options: number[];\n  selectedLength: number;\n  onChange: (value: string) => void;\n}\n\nexport const Selector: FC<Props> = memo(({\n  options, selectedLength, onChange,\n}) => (\n  <div className=\"Selector\">\n    <span className=\"Selector__label\">\n      Length\n    </span>\n\n    <select\n      className=\"Selector__select\"\n      value={selectedLength}\n      onChange={({ target }) => {\n        onChange(target.value);\n      }}\n    >\n      {options.map(item => (\n        <option key={`length-${item}`} value={item}>\n          {item}\n        </option>\n      ))}\n    </select>\n  </div>\n));\n","import { range as getRange } from 'lodash';\nimport { Button } from 'react-bootstrap';\nimport {\n  FC, memo, useCallback, useMemo, useState,\n} from 'react';\nimport { SortType } from '../../enums/SortType';\nimport { Selector } from '../Selector';\n\ninterface Props {\n  goods: string[];\n  compareRange: [number, number];\n}\n\nexport const GoodsList: FC<Props> = memo(({ goods, compareRange }) => {\n  const [minLength, maxLength] = compareRange;\n\n  const [selectedLength, setLength] = useState(minLength);\n  const [sortBy, setSortType] = useState(SortType.Default);\n  const [isReversed, setReversed] = useState(false);\n\n  const handleReverseClick = useCallback(() => {\n    setReversed(true);\n  }, []);\n\n  const handleSortByLengthClick = useCallback(() => {\n    setSortType(SortType.ByLength);\n  }, []);\n\n  const handleSortAlphabeticallyClick = useCallback(() => {\n    setSortType(SortType.Alphabetical);\n  }, []);\n\n  const handleResetClick = useCallback(() => {\n    setReversed(false);\n    setSortType(SortType.Default);\n    setLength(minLength);\n  }, []);\n\n  const handleSelectorChange = useCallback((value: string) => {\n    setLength(Number(value));\n  }, []);\n\n  const getVisibleGoods = () => {\n    const visibleGoodsList = goods.filter(\n      item => item.length >= selectedLength,\n    );\n\n    visibleGoodsList.sort(\n      (itemA, itemB) => {\n        switch (sortBy) {\n          case SortType.ByLength:\n            return itemA.length - itemB.length;\n\n          case SortType.Alphabetical:\n            return itemA.localeCompare(itemB);\n\n          case SortType.Default:\n            return 0;\n\n          default:\n            throw new Error(`Error: SortType ${sortBy} is undefined`);\n        }\n      },\n    );\n\n    if (isReversed) {\n      visibleGoodsList.reverse();\n    }\n\n    return visibleGoodsList;\n  };\n\n  const visibleGoods = useMemo(\n    getVisibleGoods,\n    [isReversed, sortBy, selectedLength],\n  );\n\n  const availableOptions = useMemo(\n    () => getRange(minLength, maxLength + 1),\n    [],\n  );\n\n  const ifNothingToReset = (\n    selectedLength === minLength\n    && sortBy === SortType.Default && !isReversed\n  );\n\n  return (\n    <div className=\"GoodsList\">\n      <div className=\"GoodsList__controllers\">\n        <Button\n          className=\"GoodsList__button\"\n          onClick={handleSortByLengthClick}\n          disabled={sortBy === SortType.ByLength}\n        >\n          Sort by length\n        </Button>\n\n        <Button\n          className=\"GoodsList__button\"\n          onClick={handleSortAlphabeticallyClick}\n          disabled={sortBy === SortType.Alphabetical}\n        >\n          Sort alphabetically\n        </Button>\n\n        <Button\n          className=\"GoodsList__button\"\n          onClick={handleResetClick}\n          disabled={ifNothingToReset}\n        >\n          Reset\n        </Button>\n\n        <Button\n          className=\"GoodsList__button\"\n          onClick={handleReverseClick}\n          disabled={isReversed}\n        >\n          Reverse\n        </Button>\n\n        <Selector\n          options={availableOptions}\n          selectedLength={selectedLength}\n          onChange={handleSelectorChange}\n        />\n      </div>\n\n      <ul className=\"GoodsList__list\">\n        {visibleGoods.map(item => (\n          <li\n            className=\"GoodsList__list-item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n});\n","import './styles/App.scss';\nimport { Button } from 'react-bootstrap';\nimport {\n  FC, memo, useCallback, useState,\n} from 'react';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: FC = memo(() => {\n  const [\n    isButtonVisible,\n    setButtonVisible,\n  ] = useState(true);\n\n  const handleStartClick = useCallback(() => {\n    setButtonVisible(false);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {isButtonVisible\n        ? (\n          <Button\n            className=\"App__startButton\"\n            onClick={handleStartClick}\n          >\n            Start\n          </Button>\n        ) : (\n          <div className=\"App__goodsList\">\n            <GoodsList\n              goods={goodsFromServer}\n              compareRange={[1, 10]}\n            />\n          </div>\n        )}\n    </div>\n  );\n});\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}