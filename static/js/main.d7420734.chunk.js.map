{"version":3,"sources":["enums/SortType.ts","components/Selector/Selector.tsx","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","Selector","options","selectedLength","onChangeFunc","className","value","onChange","target","map","item","GoodsList","goods","useState","minLength","maxLength","setLength","Default","sortBy","setSortType","isReversed","setReversed","availableOptions","range","ifNothingToReset","Button","onClick","ByLength","disabled","Alphabetical","Number","visibleGoodsList","filter","length","sort","itemA","itemB","localeCompare","Error","reverse","getVisibleGoodsList","goodsFromServer","App","state","isButtonVisible","handleStartClick","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7420734.chunk.js","sourcesContent":["export enum SortType {\n  Default,\n  ByLength,\n  Alphabetical,\n}\n","import { FC } from 'react';\n\ninterface Props {\n  options: number[];\n  selectedLength: number;\n  onChangeFunc: (value: string) => void;\n}\n\nexport const Selector: FC<Props> = ({\n  options,\n  selectedLength,\n  onChangeFunc,\n}) => (\n  <div className=\"Selector\">\n    <span className=\"Selector__label\">\n      Length\n    </span>\n\n    <select\n      className=\"Selector__select\"\n      value={selectedLength}\n      onChange={({ target }) => {\n        onChangeFunc(target.value);\n      }}\n    >\n      {options.map(item => (\n        <option key={`length-${item}`} value={item}>\n          {item}\n        </option>\n      ))}\n    </select>\n  </div>\n);\n","import { range } from 'lodash';\nimport { Button } from 'react-bootstrap';\nimport { FC, useState } from 'react';\nimport { SortType } from '../../enums/SortType';\nimport { Selector } from '../Selector';\n\ninterface Props {\n  goods: string[];\n}\n\nexport const GoodsList: FC<Props> = ({ goods }) => {\n  const [minLength] = useState(1);\n  const [maxLength] = useState(10);\n  const [selectedLength, setLength] = useState(minLength);\n  const [sortBy, setSortType] = useState(SortType.Default);\n  const [isReversed, setReversed] = useState(false);\n\n  const handleReverseClick = () => {\n    setReversed(true);\n  };\n\n  const handleSortByLengthClick = () => {\n    setSortType(SortType.ByLength);\n  };\n\n  const handleSortAlphabeticallyClick = () => {\n    setSortType(SortType.Alphabetical);\n  };\n\n  const handleResetClick = () => {\n    setReversed(false);\n    setSortType(SortType.Default);\n    setLength(minLength);\n  };\n\n  const handleSelectorChange = (value: string) => {\n    setLength(Number(value));\n  };\n\n  const getVisibleGoodsList = () => {\n    const visibleGoodsList = goods.filter(\n      item => item.length >= selectedLength,\n    );\n\n    visibleGoodsList.sort(\n      (itemA, itemB) => {\n        switch (sortBy) {\n          case SortType.ByLength:\n            return itemA.length - itemB.length;\n\n          case SortType.Alphabetical:\n            return itemA.localeCompare(itemB);\n\n          case SortType.Default:\n            return 0;\n\n          default:\n            throw new Error(`Error: SortType ${sortBy} is undefined`);\n        }\n      },\n    );\n\n    if (isReversed) {\n      visibleGoodsList.reverse();\n    }\n\n    return visibleGoodsList;\n  };\n\n  const availableOptions = range(minLength, maxLength + 1);\n\n  const ifNothingToReset = (\n    selectedLength === minLength\n    && sortBy === SortType.Default && !isReversed\n  );\n\n  return (\n    <div className=\"GoodsList\">\n      <div className=\"GoodsList__controllers\">\n        <Button\n          className=\"GoodsList__button\"\n          onClick={handleSortByLengthClick}\n          disabled={sortBy === SortType.ByLength}\n        >\n          Sort by length\n        </Button>\n\n        <Button\n          className=\"GoodsList__button\"\n          onClick={handleSortAlphabeticallyClick}\n          disabled={sortBy === SortType.Alphabetical}\n        >\n          Sort alphabetically\n        </Button>\n\n        <Button\n          className=\"GoodsList__button\"\n          onClick={handleResetClick}\n          disabled={ifNothingToReset}\n        >\n          Reset\n        </Button>\n\n        <Button\n          className=\"GoodsList__button\"\n          onClick={handleReverseClick}\n          disabled={isReversed}\n        >\n          Reverse\n        </Button>\n\n        <Selector\n          options={availableOptions}\n          selectedLength={selectedLength}\n          onChangeFunc={handleSelectorChange}\n        />\n      </div>\n\n      <ul className=\"GoodsList__list\">\n        {getVisibleGoodsList().map(item => (\n          <li\n            className=\"GoodsList__list-item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import './styles/App.scss';\nimport { Button } from 'react-bootstrap';\nimport { Component } from 'react';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  isButtonVisible: boolean;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    isButtonVisible: true,\n  };\n\n  handleStartClick = () => {\n    this.setState({ isButtonVisible: false });\n  };\n\n  render() {\n    const { isButtonVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isButtonVisible\n          ? (\n            <Button\n              className=\"App__startButton\"\n              onClick={this.handleStartClick}\n            >\n              Start\n            </Button>\n          ) : (\n            <div className=\"App__goodsList\">\n              <GoodsList goods={goodsFromServer} />\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}